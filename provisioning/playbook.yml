---
- hosts: server
  name: config python app
  become: true
  vars_files: defaults/main.yml
  gather_facts: false
  tasks: 
    - name: Create bfg group
      group:
        name: bfg
        state: present

    - name: Create user bfg
      user:
        name: bfg
        group: bfg
        shell: /bin/bash
        password: '$6$fFbfxnR5a89VqHxU$9IX3/od5TJ9RwOWQoJXwkCVmZqj36DLZohqG6xgLuCcyrB8mh59M/4lBbgSgXJsqxdiIK.gVeIcRwFtg7OiRs/'
        
    - name: Get python app from git
      git:
        repo: https://github.com/bfg-group/stack_over_search.git
        dest: /home/bfg/stack_over_search
      ignore_errors: true
     
    - name: Install packages
      apt: 
        name: 
          - mysql-server
          - mysql-client
          - python3-mysqldb
          - redis-server
          - python3-dev 
          - default-libmysqlclient-dev 
          - build-essential
          - python3-pip
          - nginx
          - python3-venv
          - virtualenv
        update_cache: yes
        state: present

    - name: Install via pip
      ansible.builtin.pip:
        name: 
          - mysqlclient
          - PyMySQL
    
    - name: Start and enable redis 
      service:
        name: redis
        enabled: true
        state: started

    - name: Start and enable mysql
      service:
        name: mysql
        enabled: true
        state: started
    
    - name: Copy nginx config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
      notify: restart nginx

    # Python build tasks (will work only if var in defaults - python_from_source is true)
    - name: Create python directory
      file:
        path: "{{ python_dir }}"
        state: directory
    
    - name: Create python tmp directory
      file:
        path: '{{ python_dir }}/tmp'
        state: directory
    
    - name: Copy python source to tmp folder
      get_url:
        url: "{{ python_source_url }}" 
        dest: "{{ python_dir }}/tmp"
    
    - name: untar python source file
      shell: cd "{{ python_dir }}/tmp" && tar -xzf "{{ python_version_name }}.tgz"
    
    - name: Build python from source
      shell: "{{ item }}"
      args:
        chdir: "{{ python_dir }}/tmp/{{ python_version_name }}"
      with_items:
        - ./configure --enable-optimizations --prefix={{ python_dir }} 
        - make -j 2
        - make install
      when: python_from_source == true
    
    # Database configure tasks
    - name: update mysql root password for root account
      mysql_user:
        name: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        host: 'localhost'
        password: '12345'
        priv: "*.*:ALL,GRANT"
        check_implicit_admin: true
      ignore_errors: true
    
    - name: Save root password in .my.cnf
      template:
        src: templates/root_cnf.j2
        dest: /root/.my.cnf
        owner: root
        mode: '0600'
      notify: restart mysql-server

    - name: Create database stack_exchange
      mysql_db:
        name: "stack_exchange"
        state: present
  
    - name: Restore tables from tables.sql
      mysql_db:
        name: stack_exchange
        state: import
        target: /home/bfg/stack_over_search/tables.sql
      ignore_errors: true

    # Stackoversearch config tasks
    - name: Create /etc/stackoversearch directory
      file:
        path: /etc/stackoversearch
        state: directory

    - name: Create /var/log/stackoversearch directory
      file:
        path: /var/log/stackoversearch
        state: directory

    - name: Template settings.ini copy
      template:
        src: templates/settings.ini.j2
        dest: /etc/stackoversearch/stack_settings.ini
        owner: bfg
        mode: '0644'
      
    - name: copy wsgi.py
      copy:
        src: templates/wsgi.py
        dest: /home/bfg/stack_over_search/stackoversearch
        owner: bfg
        mode: '0644'
      
    - name: Initiate virtualenv stack with source
      pip:
        requirements: /home/bfg/stack_over_search/requirements.txt
        virtualenv: /home/bfg/stack_over_search/virtualenv
        virtualenv_python: "{{ python_dir }}/bin/python3.6"
      when: python_from_source == true
    
    - name: Initiate virtualenv stack
      pip:
        requirements: /home/bfg/stack_over_search/requirements.txt
        virtualenv: /home/bfg/stack_over_search/virtualenv
        virtualenv_python: python3.6
      when: python_from_source == false

    - name: Install gunicorn to venv
      pip:
        name: gunicorn
        virtualenv: /home/bfg/stack_over_search/virtualenv
      when: python_from_source == false
    
    - name: Change owner for stack_over_search folder
      file:
        path: /home/bfg/stack_over_search
        state: directory
        recurse: yes
        owner: bfg
        group: bfg
    
    - name: Change owner for /var/log/stack_over_search folder
      file:
        path: /var/log/stackoversearch
        state: directory
        recurse: yes
        owner: bfg
        group: bfg
    
    - name: Copy gunicorn stack supervisor and start
      template:
        src: templates/gunicorn_stack.service.j2
        dest: /etc/systemd/system/gunicorn_stack.service
      notify: start stack_over systemd
      when: test_app == false
      ignore_errors: true
    
    # Test gunicorn test_app app configure tasks
    - name: Copy gunicorn test_app supervisor
      template:
        src: templates/gunicorn_tst.service.j2
        dest: /etc/systemd/system/gunicorn_tst.service
      notify: start test_app systemd
      when: test_app == true
    
    - name: Get test_app from git
      git:
        repo: https://github.com/ChurikovAnatolii/tst_app.git
        dest: /home/vagrant/tst
      when: test_app == true

    - name: Initiate venv in tst
      pip: 
        requirements: /home/vagrant/tst/requirements.txt
        virtualenv: /home/vagrant/tst/venv
        virtualenv_python: "{{ python_dir }}/bin/python3.6"
      when: test_app == true and python_from_source == true
    
    - name: Initiate venv in tst
      pip: 
        requirements: /home/vagrant/tst/requirements.txt
        virtualenv: /home/vagrant/tst/venv
        virtualenv_python: python3.6
      when: test_app == true and python_from_source == false

    - name: Change owner for tst folder
      file:
        path: /home/vagrant/tst
        state: directory
        recurse: yes
        owner: vagrant
        group: vagrant
      when: test_app == true
  
  handlers:
    - name: restart mysql-server
      service:  
        name: mysql
        state: restarted
    
    - name: restart nginx
      service:  
        name: nginx
        state: restarted
        enabled: yes

    - name: start test_app systemd
      service:  
        name: gunicorn_tst.service
        state: restarted
        enabled: yes

    - name: start stack_over systemd
      service:  
          name: gunicorn_stack.service
          state: restarted
          enabled: yes